version: '3.8'

services:
  db:
    image: postgres:16
    container_name: subscription-tracker-db
    environment:
      POSTGRES_DB: ${POSTGRES_NAME:-subscription-tracker}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    build: ./services/auth-service
    container_name: auth-service
    expose:
      - "8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_NAME:-subscription_tracker_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-password}
    depends_on: [db]

  subscription-service:
    build: ./services/subscription-service
    container_name: subscription-service
    expose:
      - "8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_NAME:-subscription_tracker_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-password}
      AUTH_BASE_URL: http://auth-service:8081
    depends_on: [db, auth-service]

  nginx:
    image: nginx:latest
    container_name: subscription-tracker-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - .frontend:/dist:/usr/share/nginx/html:ro
    depends_on: [auth-service, subscription-service]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: subscription-tracker-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  sonarqube:
    image: sonarqube:community
    container_name: subscription-tracker-sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/postgres
      SONAR_JDBC_USERNAME: ${POSTGRES_USER}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-extensions:/opt/sonarqube/extensions
      - sonarqube-logs:/opt/sonarqube/logs

volumes:
  pg-data:
  rabbitmq-data:
  sonarqube-data:
  sonarqube-extensions:
  sonarqube-logs:
